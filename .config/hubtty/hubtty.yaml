# This is an example ~/.config/hubtty/hubtty.yaml with an exhaustive listing of
# options with commentary.

# This section lists the servers that Hubtty can talk to.  Multiple
# servers may be listed; by default, Hubtty will use the first one
# listed.  To select another, simply specify its name on the command
# line.
servers:
  - name: github.com
    git-root: ~/hubtty/
    # url: https://github.com/
    # api-url: https://api.github.com/
    additional-repositories:
      - gophercloud/gophercloud
      - gophercloud/utils
      - hubtty/hubtty
      - hubtty/hubtty-playground
      - kubernetes/cloud-provider-openstack
      - openshift/baremetal-runtimecfg
      - openshift/cloud-provider-openstack
      - openshift/cluster-api-provider-openstack
      - openshift/cluster-cloud-controller-manager-operator
      - openshift/csi-driver-manila-operator
      - openshift/enhancements
      - openshift/installer
      - openshift/machine-config-operator
      - openshift/manila-provisioner-operator
      - openshift/mdns-publisher
      - openshift/openstack-cinder-csi-driver-operator
      - openshift/release
      - shiftstack/bugwatcher
      - shiftstack/bzira
      - shiftstack/ci-configs
      - shiftstack/dev-install
      - shiftstack/gazelle
      - shiftstack/merge-bot
      - shiftstack/secrets
      - shiftstack/shiftstack-ci


# Each server section can have the following fields:
# A name that describes the server, to reference on the command line. [required]
#  - name: sample
# The URL of the Github server.  HTTPS should be preferred.
# Defaults to https://github.com/.
#    url: https://example.org/
# The URL of the Github API server.  HTTPS should be preferred.
# Defaults to https://api.github.com/.
#    api-url: https://api.example.org/
# A location where Hubtty should store its git repositories.  These
# can be the same git repositories where you do your own work --
# Hubtty will not modify them unless you tell it to, and even then the
# normal git protections against losing work remain in place. [required]
#    git-root: ~/git/
# The URL to clone git repos. By default, <url>/p/<project> is used. For a list
# of valid URLs, see:
# https://www.kernel.org/pub/software/scm/git/docs/git-clone.html#URLS
#    git-url: ssh://user@example.org:29418
# The location of Hubtty's sqlite database.  If you have more than one
# server, you should specify a dburi for any additional servers.
# By default a SQLite database called ~/.local/share/hubtty/hubtty.db is used.
#    dburi: sqlite:////home/user/.local/share/hubtty/hubtty.db
# By default Hubtty logs errors to a file and truncates that file each
# time it starts (so that it does not grow without bound).  If you
# would like to log to a different location, you may specify it here.
#    log-file: ~/.local/share/hubtty/hubtty.log
# Hubtty listens on a unix domain socket for remote commands at
# $XDG_RUNTIME_DIR/hubtty.sock.  You may change the path here:
#    socket: ~/.hubtty.sock
# Hubtty uses a lock file per server to prevent multiple processes
# from running at the same time. Example:
#    lock-file: /run/lockme.lock
# By default hubtty lists all repositories to which the user has explicit
# permission.  You can add extra repositories to this list using the
# additional-repositories. Example:
#    additional-repositories:
#      - mandre/hubtty

# Hubtty comes with two palettes defined internally.  The default
# palette is suitable for use on a terminal with a dark background.
# The "light" palette is for a terminal with a white or light
# background.  You may customize the colors in either of those
# palettes, or define your own palette.

# The following alters two colors in the default palette, one color in
# the light palette, and one color in a custom palette.  If any color
# is not defined in a palette, the value from the default palette is
# used.  The values are a list of at least two elements describing the
# colors to be use for the foreground and background colors.
# Additional elements can specify (in order) the color to use for
# monochrome terminals, the foreground, and background colors to use
# in high-color terminals.

# For a reference of possible color names, see:
# http://urwid.org/manual/displayattributes.html#foreground-and-background-settings
# To see the list of possible palette entries, run "hubtty --print-palette".

# palettes:
#   - name: default
#     added-line: ['dark green', '']
#     added-word: ['light green', '']
#   - name: light
#     filename: ['dark cyan', '']
#   - name: custom
#     filename: ['light yellow', '']

# Palettes may be selected at runtime with the "-p PALETTE" command
# line option, or you may set the default palette here:
# palette: light

# Keymaps work the same way as palettes.  Two keymaps are defined
# internally, the 'default' keymap and the 'vi' keymap.  Individual
# keys may be overridden and custom keymaps defined and selected in
# the config file or the command line.

# Each keymap contains a mapping of command -> key(s).  If a command
# is not specified, Hubtty will use the keybinding specified in the
# default map.  More than one key can be bound to a command.

# Run "hubtty --print-keymap" for a list of commands that can be
# bound.

# keymaps:
#   - name: default
#     diff: 'd'
#   - name: custom
#     review: ['r', 'R']
#   - name: osx # MacOS blocks ctrl+o
#     change-search: 'ctrl s'
# To specify a sequence of keys, they must be a list of keystrokes
# within a list of key series.  For example:
#   - name: vi
#     quit: [[':', 'q']]

# The default keymap may be selected with the '-k KEYMAP' command line
# option, or with the following line:
keymap: vi

# Commentlinks are regular expressions that are applied to commit and
# review messages.  They can be replaced with internal or external
# links, or have colors applied.
commentlinks:
  # Match Bugs, and replace them with a link to bugzilla
  - match: "(?P<bug_str>([Bb]ug|[Bb][Zz]) ?#?(?P<id>\\d+))"
    replacements:
     - link:
         text: "{bug_str}"
         url: "https://bugzilla.redhat.com/show_bug.cgi?id={id}"
  # Match commit sha, and replace them with a link to an internal
  # Hubtty search for PRs containing that commit.
  - match: "(?P<sha>\\s[a-f0-9]{6,40}\\b)"
    replacements:
      - search:
          text: "{sha}"
          query: "commit:{sha}"
  # Match mentions, and replace them with a link to an internal
  # Hubtty search for the user's PRs.
  - match: "(?P<mention_str>[^\\w]@(?P<username>[\\w-]+))"
    replacements:
      - search:
          text: "{mention_str}"
          query: "author:{username}"
# Any number of commentlink entries may be specified.  Start each with
# a "match" key and regex.  Named match groups within the regex may be
# used in the replacements section.  Any number of replacements may be
# specified.  The types of replacement available are:
#
# Text: Plain text whose color may be specified.  The color references
# a palette entry.
#      - text:
#          color: ""
#          text: ""
# Link: A hyperlink with the indicated text that when activated will
# open the user's browser with the supplied URL
#      - link:
#          text: ""
#          url: ""
# Search: A hyperlink that will perform a Hubtty search when
# activated.
#      - search:
#          text: "{id}"
#          query: "change:{id}"

# This is the query used for the list of changes when a project is
# selected.  The default is "state:open".
# change-list-query: "state:open"

# This section defines default sorting options for the change
# list. The "sort-by" key specifies the sort order, which can be
# 'number', 'updated', or 'last-seen'.  The 'reverse' key specifies
# ascending (true) or descending (false) order.
change-list-options:
  sort-by: 'updated'
  reverse: true

# Uncomment the following line to disable the navigation breadcrumbs
# at the bottom of the screen:
# breadcrumbs: false

# Uncomment the following line to close a change after saving
# a review.
# close-change-on-review: true

# Uncomment the following line to use a unified diff view instead
# of the default side-by-side:
# diff-view: unified

# Dependent changes are displayed as "threads" in the change list by
# default.  To disable this behavior, uncomment the following line:
# thread-changes: false

# Times are displayed in the local timezone by default.  To display
# them in UTC instead, uncomment the following line:
# display-times-in-utc: true

# Hubtty handles mouse input by default.  If you don't want it messing
# with your terminal's mouse handling, uncomment the following line:
# handle-mouse: false

# Closed changes that are older than two months are removed from the
# local database (and their refs are removed from the local git repos
# so that git may garbage collect them).  If you would like to change
# the expiration delay or disable it, uncomment the following line.
# The time interval is specified in the same way as the "age:" term in
# Github's search syntax.  To disable it altogether, set the value to
# the empty string.
expire-age: '1 month'

# Uncomment the following lines to Hide comments by default that match
# certain criteria.  You can toggle their display with 't'.  Currently
# the only supported criterion is "author".
hide-comments:
  - author: "^.*openshift.*$"
  - author: "k8s-ci-robot"
  - author: "theopenlab-ci.*$"

# This section defines customized dashboards.  You can supply any
# Hubtty search string and bind them to any key.  They will appear in
# the global help text, and pressing the key anywhere in Hubtty will
# run the query and display the results.
#
# NB: "recentlyseen:24 hours" does not just return changes seen in the
# last 24 hours -- it returns changes seen within 24 hours of the most
# recently seen change.  So you can take the weekend off and pick up
# where you were.
dashboards:
  - name: "My changes"
    query: "is:open is:author"
    key: "f2"
  - name: "Incoming reviews"
    query: "is:open is:reviewer"
    key: "f3"
  - name: "Starred changes"
    query: "is:starred"
    key: "f4"
  - name: "Recently seen changes"
    query: "recentlyseen:24 hours"
    sort-by: "last-seen"
    reverse: True
    key: "f5"

# Reviewkeys are hotkeys that perform immediate reviews within the change
# screen.  Any pending comments or review messages will be attached to the
# review; otherwise an empty review will be left.
# Approval must be one of REQUEST_CHANGES, COMMENT, or APPROVE.
# To keep the review as a draft and not submit it right away, include 'draft:
# True' with the reviewkey.  Reviewkeys appear in the help text for the change
# screen. Use the 'description' parameter to change the help message for the
# reviewkey.
reviewkeys:
  - key: 'meta 1'
    description: 'Comment with /lgtm and /approve'
    approval: 'APPROVE'
    message: "/lgtm\n/approve"
    # draft: True
  - key: 'meta 2'
    description: 'Comment with /retest'
    approval: 'COMMENT'
    message: "/retest"

# 'size-column' is a set of customize parameters for the 'Size' column
# on your dashboard.
# 'type' must be 'graph', 'split-graph' or 'number'. Default is 'graph'.
# 'thresholds' is for bar graphs width (when graph) or color styles
# (when number).
# size-column:
#   type: 'graph'
#   thresholds: [1, 10, 100, 1000]
